# Generated by Django 4.2 on 2023-11-05 17:24

import django.core.validators
from django.db import migrations, models
import user.models
import uuid


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='CustomUser',
            fields=[
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('inn', models.CharField(max_length=12, unique=True, validators=[django.core.validators.MinLengthValidator(10), django.core.validators.MaxLengthValidator(12)], verbose_name='ИНН')),
                ('ogrn', models.CharField(blank=True, max_length=15, null=True, unique=True, validators=[django.core.validators.MinLengthValidator(13), django.core.validators.MaxLengthValidator(15)], verbose_name='ОГРН')),
                ('kpp', models.CharField(blank=True, max_length=9, null=True, unique=True, validators=[django.core.validators.MinLengthValidator(9), django.core.validators.MaxLengthValidator(9)], verbose_name='КПП')),
                ('label', models.CharField(blank=True, max_length=255, null=True, verbose_name='Название организации')),
                ('address', models.CharField(blank=True, max_length=255, null=True, verbose_name='Адрес')),
                ('representative_person', models.CharField(blank=True, max_length=255, null=True, verbose_name='Представитель')),
                ('mkd', models.FileField(blank=True, null=True, upload_to=user.models.file_path, validators=[django.core.validators.FileExtensionValidator(['pdf'])], verbose_name='Договор управления МКД')),
                ('egrul', models.FileField(blank=True, null=True, upload_to=user.models.file_path, validators=[django.core.validators.FileExtensionValidator(['pdf'])], verbose_name='Выписка из ЕГРЮЛ')),
                ('is_active', models.BooleanField(default=True, verbose_name='Активен')),
                ('is_staff', models.BooleanField(default=False, verbose_name='Администратор')),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.permission', verbose_name='user permissions')),
            ],
            options={
                'verbose_name': 'Пользователь',
                'verbose_name_plural': 'Пользователи',
            },
        ),
    ]
